package asm;/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.*;
import java.util.ArrayList;
import java.util.Scanner;

/**
 *
 * @author conbotngungoc
 */

class VehicleData {
    private String tenKhachHang;
    private String dongXe;
    private String ngayGio;
    private double giaBan;
    private boolean isNew;

    public VehicleData(String tenKhachHang, String dongXe, String ngayGio, double giaBan, boolean isNew) {
        this.tenKhachHang = tenKhachHang;
        this.dongXe = dongXe;
        this.ngayGio = ngayGio;
        this.giaBan = giaBan;
        this.isNew = isNew;
    }



    public String getTenKhachHang() {
        return tenKhachHang;
    }

    public void setTenKhachHang(String tenKhachHang) {
        this.tenKhachHang = tenKhachHang;
    }

    public String getDongXe() {
        return dongXe;
    }

    public void setDongXe(String dongXe) {
        this.dongXe = dongXe;
    }

    public String getNgayGio() {
        return ngayGio;
    }

    public void setNgayGio(String ngayGio) {
        this.ngayGio = ngayGio;
    }

    public double getGiaBan() {
        return giaBan;
    }

    public void setGiaBan(double giaBan) {
        this.giaBan = giaBan;
    }

    public boolean isNew() {
        return isNew;
    }

    public void setNew(boolean aNew) {
        isNew = aNew;
    }
}



public class asm2 extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame3
     */
    ArrayList<VehicleData> vehicleList = new ArrayList<>();
    public asm2() {
        initComponents();
        setupTableListener();
    }
    private void setupTableListener() {
        jTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                int selectedRow = jTable.getSelectedRow();

                if (selectedRow != -1) {
                    // Hiển thị thông tin của hàng đã chọn
                    displaySelectedRowInfo(selectedRow);
                }
            }
        });
        jTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int selectedRow = jTable.getSelectedRow();
                if (selectedRow != -1) {
                    displaySelectedRowInfo(selectedRow);
                }
            }
        });
    }
    private void displaySelectedRowInfo(int selectedRow) {

        VehicleData selectedVehicle = vehicleList.get(selectedRow);


        jtenkhachang.setText(selectedVehicle.getTenKhachHang());
        jComboBox1.setSelectedItem(selectedVehicle.getDongXe());
        jTextField1.setText(selectedVehicle.getNgayGio());
        jgiaca.setValue(selectedVehicle.getGiaBan());
        jCheckBox1.setSelected(selectedVehicle.isNew());
        jCheckBox2.setSelected(!selectedVehicle.isNew());
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtenkhachang = new javax.swing.JFormattedTextField();
        jgiaca = new javax.swing.JFormattedTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jthem = new javax.swing.JButton();
        jxoa = new javax.swing.JButton();
        capnhap = new javax.swing.JButton();
        jnhapmoi = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jTextField1 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jImport_input = new javax.swing.JButton();
        jExport_input = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("sansserif", 3, 24)); // NOI18N
        jLabel1.setText("Vehicle data management");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(316, 316, 316)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null, null, null, null},
                        {null, null, null, null, null},
                        {null, null, null, null, null},
                        {null, null, null, null, null}
                },
                new String [] {
                        "Khách hàng", "Dòng xe", "Ngày giờ", "giá bán", "Mới / Cũ"
                }
        ));
        jTable.setColumnSelectionAllowed(true);
        jScrollPane2.setViewportView(jTable);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Tên khách hàng");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText(" Dòng xe");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Ngày giờ");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Giá bán");

        jtenkhachang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtenkhachangActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Toyota", "Kia", "Mazda", "Ford", "Honda", "Vinfast", "Mec", "Audi", "BMW" }));


        jthem.setText(" Thêm");
        jthem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jthemActionPerformed(evt);
            }
        });

        jxoa.setText(" Xóa");
        jxoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jxoaActionPerformed(evt);
            }
        });

        capnhap.setText(" Cập nhập");
        capnhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                capnhapActionPerformed(evt);
            }
        });

        jnhapmoi.setText("Nhập mới");
        jnhapmoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jnhapmoiActionPerformed(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jCheckBox1.setText(" Mới");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jCheckBox2.setText(" Cũ");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jButton5.setText("Tổng giá bán");
        jButton5.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                calculateTotalPrice();
            }
        });

        jButton6.setText("Xe giá bán cao nhất");
        jButton6.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                findMaxPriceVehicle();
            }
        });

        jButton7.setText("Xe giá bán thấp nhất");
        jButton7.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                findMinPriceVehicle();
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel3)
                                                .addComponent(jLabel2)
                                                .addComponent(jLabel4)
                                                .addComponent(jLabel5))
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGap(47, 47, 47)
                                                .addComponent(jCheckBox1)))
                                .addGap(49, 49, 49)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(jCheckBox2)
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jgiaca)
                                                        .addComponent(jtenkhachang, javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                                                .addGap(0, 0, Short.MAX_VALUE)
                                                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(jTextField1))
                                                .addGap(51, 51, 51))))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGap(30, 30, 30)
                                                .addComponent(jthem)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jxoa)
                                                .addGap(18, 18, 18)
                                                .addComponent(capnhap)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jnhapmoi))
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jButton5)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jButton6)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton7)))
                                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(jtenkhachang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jComboBox1)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(29, 29, 29)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel4)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5)
                                        .addComponent(jgiaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jCheckBox1)
                                        .addComponent(jCheckBox2))
                                .addGap(52, 52, 52)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jthem)
                                        .addComponent(jxoa)
                                        .addComponent(capnhap)
                                        .addComponent(jnhapmoi))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButton5)
                                        .addComponent(jButton6)
                                        .addComponent(jButton7))
                                .addGap(32, 32, 32))
        );

        jImport_input.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jImport_input.setText("Nhập dữ liệu");
        jImport_input.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                importData();
            }
        });

        jExport_input.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jExport_input.setText("Xuất  dữ liệu");
        jExport_input.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                exportData();
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jImport_input)
                                                .addGap(177, 177, 177)
                                                .addComponent(jExport_input)
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(58, 58, 58)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jImport_input)
                                        .addComponent(jExport_input))
                                .addContainerGap(72, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 1138, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 673, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>

    private void jtenkhachangActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code he
    }
    private boolean isAlpha(String str) {
        return str.matches("^[a-zA-Z ]+$");
    }
    private boolean isValidDate(String date) {
        String regex = "^(0[1-9]|[1-2][0-9]|3[0-1])/(0[1-9]|1[0-2])/(\\d{2}|\\d{4})$";

        return date.matches(regex);
    }
    private void jthemActionPerformed(java.awt.event.ActionEvent evt) {

        String tenKhachHang = jtenkhachang.getText();
        if (!isAlpha(tenKhachHang)) {
            JOptionPane.showMessageDialog(this, "Tên không hợp lệ! Hãy chỉ nhập chữ cái.");
            return;
        }

        String dongXe = jComboBox1.getSelectedItem().toString();
        String ngayGioText = jTextField1.getText();
        if (!isValidDate(ngayGioText)) {
            JOptionPane.showMessageDialog(this, "Ngày giờ không hợp lệ! Hãy nhập theo định dạng dd/MM/yyyy.");
            return;
        }
        String giaBanText = jgiaca.getText().replaceAll("", "");
        // kiểm tra gia bán có giá trị hay không
        if (!giaBanText.isEmpty()) {
            try {
                double giaBan = Double.parseDouble(giaBanText);
                boolean isNew = jCheckBox1.isSelected();
                VehicleData newVehicle = new VehicleData(tenKhachHang, dongXe, ngayGioText, giaBan, isNew);

                // Thêm đối tượng vào ArrayList
                vehicleList.add(newVehicle);
                updateTable();
                JOptionPane.showMessageDialog(this, "Thêm mới thành công!");
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Lỗi: Giá bán không hợp lệ!");
                ex.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Lỗi: Vui lòng nhập giá bán!");
        }
    }
    private void updateTable() {
        // Xóa tất cả các hàng hiện có trong bảng
        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        model.setRowCount(0);

        // Thêm lại tất cả các dòng từ danh sách xe vào bảng
        for (VehicleData vehicle : vehicleList) {
            String loai = vehicle.isNew() ? "mới" : "cũ" ;
            Object[] rowData = {
                    vehicle.getTenKhachHang(),
                    vehicle.getDongXe(),
                    vehicle.getNgayGio(),
                    vehicle.getGiaBan(),
                    loai
            };
            model.addRow(rowData);
        }
    }

    private void jxoaActionPerformed(java.awt.event.ActionEvent evt) {
        int selectedRow = jTable.getSelectedRow();

        // Kiểm tra xem có dòng được chọn hay không
        if (selectedRow != -1) {
            // Xóa dòng được chọn từ danh sách
            vehicleList.remove(selectedRow);

            // Cập nhật bảng
            updateTable();
        } else {
            // Hiển thị thông báo nếu không có dòng nào được chọn
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng để xóa.", "Thông báo", JOptionPane.WARNING_MESSAGE);
        }
    }
    private void capnhapActionPerformed(java.awt.event.ActionEvent evt) {
        int selectedRow = jTable.getSelectedRow();

        if (selectedRow != -1) {
            try {
                // Lấy thông tin từ các ô đầu vào
                String tenKhachHang = jtenkhachang.getText();
                String dongXe = jComboBox1.getSelectedItem().toString();
                String ngayGio = jTextField1.getText();
                String giaBanText = jgiaca.getText().replaceAll("", "");
                boolean isNew = jCheckBox1.isSelected();
                if (!isAlpha(tenKhachHang)) {
                    JOptionPane.showMessageDialog(this, "Tên không hợp lệ! Hãy chỉ nhập chữ cái.");
                    return;
                }

                if (!isValidDate(ngayGio)) {
                    JOptionPane.showMessageDialog(this, "Ngày giờ không hợp lệ! Hãy nhập theo định dạng dd/MM/yyyy.");
                    return;
                }

                // Kiểm tra hợp lệ của giá bán
                if (!giaBanText.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Lỗi: Vui lòng nhập giá bán hợp lệ!");
                    return;
                }
                double giaBan = Double.parseDouble(giaBanText);


                // Cập nhật thông tin của hàng đã chọn trong ArrayList
                VehicleData selectedVehicle = vehicleList.get(selectedRow);
                selectedVehicle.setTenKhachHang(tenKhachHang);
                selectedVehicle.setDongXe(dongXe);
                selectedVehicle.setNgayGio(ngayGio);
                selectedVehicle.setGiaBan(giaBan);
                selectedVehicle.setNew(isNew);

                // Cập nhật bảng
                updateTable();
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Lỗi: Giá bán không hợp lệ!");
                ex.printStackTrace();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Lỗi khi cập nhật: " + ex.getMessage());
                ex.printStackTrace();
            }
            JOptionPane.showMessageDialog(this, "Cập nhật thành công!");
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng để cập nhật.", "Thông báo", JOptionPane.WARNING_MESSAGE);
        }
    }
    private void jnhapmoiActionPerformed(java.awt.event.ActionEvent evt) {
        // Xóa nội dung trong các ô đầu vào
        jtenkhachang.setText("");
        jComboBox1.setSelectedIndex(0);
        jgiaca.setValue(0.0);
        jTextField1.setText("");
        jCheckBox1.setSelected(false);
        jCheckBox2.setSelected(false);
    }

    private void jCheckBox1ActionPerformed (java.awt.event.ActionEvent evt) {

        if (jCheckBox1.isSelected()) {
            jCheckBox2.setSelected(false);
        }
    }
    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {
        if (jCheckBox2.isSelected()) {
            jCheckBox1.setSelected(false);
        }
    }
    private void calculateTotalPrice() {
        double total = 0.0;
        for (VehicleData vehicle : vehicleList) {
            total += vehicle.getGiaBan();
        }
        JOptionPane.showMessageDialog(this, "Tổng giá bán: " + total);
    }
    private void findMaxPriceVehicle() {
        double maxPrice = Double.MIN_VALUE;
        VehicleData maxPriceVehicle = null;
        for (VehicleData vehicle : vehicleList) {
            if (vehicle.getGiaBan() > maxPrice) {
                maxPrice = vehicle.getGiaBan();
                maxPriceVehicle = vehicle;
            }
        }
        if (maxPriceVehicle != null) {
            JOptionPane.showMessageDialog(this, "Xe giá bán cao nhất: " + maxPriceVehicle.getTenKhachHang() + ", Giá: " + maxPriceVehicle.getGiaBan());
        } else {
            JOptionPane.showMessageDialog(this, "Không có dữ liệu để hiển thị.");
        }
    }
    private void findMinPriceVehicle() {
        double minPrice = Double.MAX_VALUE;
        VehicleData minPriceVehicle = null;
        for (VehicleData vehicle : vehicleList) {
            if (vehicle.getGiaBan() < minPrice) {
                minPrice = vehicle.getGiaBan();
                minPriceVehicle = vehicle;
            }
        }
        if (minPriceVehicle != null) {
            JOptionPane.showMessageDialog(this, "Xe giá bán thấp nhất: " + minPriceVehicle.getTenKhachHang() + ", Giá: " + minPriceVehicle.getGiaBan());
        } else {
            JOptionPane.showMessageDialog(this, "Không có dữ liệu để hiển thị.");
        }
    }
    private void importData() {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Chọn file nhập dữ liệu");

        int userSelection = fileChooser.showOpenDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToOpen = fileChooser.getSelectedFile();
            try (Scanner scanner = new Scanner(fileToOpen)) {
                // Đọc dữ liệu từ file
                while (scanner.hasNextLine()) {
                    String line = scanner.nextLine();
                    String[] parts = line.split(",");
                    if (parts.length == 5) {
                        String tenKhachHang = parts[0].trim();
                        String dongXe = parts[1].trim();
                        String ngayGio = parts[2].trim();
                        double giaBan = Double.parseDouble(parts[3].trim());
                        boolean isNew = Boolean.parseBoolean(parts[4].trim());

                        VehicleData newVehicle = new VehicleData(tenKhachHang, dongXe, ngayGio, giaBan, isNew);
                        vehicleList.add(newVehicle);
                    }
                }

                updateTable();
                JOptionPane.showMessageDialog(this, "Nhập dữ liệu thành công!");
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Lỗi khi nhập dữ liệu: " + ex.getMessage());
                ex.printStackTrace();
            }
        }
    }
    private void exportData() {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Chọn nơi lưu trữ file xuất dữ liệu");

        int userSelection = fileChooser.showSaveDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            try (BufferedWriter writer = new BufferedWriter(new FileWriter(fileToSave))) {
                // Viết dữ liệu vào file
                for (VehicleData vehicle : vehicleList) {
                    writer.write(vehicle.getTenKhachHang() + "," +
                            vehicle.getDongXe() + "," +
                            vehicle.getNgayGio() + "," +
                            vehicle.getGiaBan() + "," +
                            vehicle.isNew());
                    writer.newLine();
                }

                JOptionPane.showMessageDialog(this, "Xuất dữ liệu thành công!");
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Lỗi khi xuất dữ liệu: " + ex.getMessage());
                ex.printStackTrace();
            }
        }
    }

        /**
         * @param args the command line arguments
         */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(asm2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(asm2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(asm2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(asm2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new asm2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton capnhap;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JButton jExport_input;
    private javax.swing.JButton jImport_input;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JFormattedTextField jgiaca;
    private javax.swing.JButton jnhapmoi;
    private javax.swing.JFormattedTextField jtenkhachang;
    private javax.swing.JButton jthem;
    private javax.swing.JButton jxoa;
    // End of variables declaration
}
